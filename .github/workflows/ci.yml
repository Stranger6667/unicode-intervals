name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  RUSTFLAGS: -Dwarnings

jobs:

  test:
    name: Tests (${{ matrix.toolchain }} / ${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolchain: nightly
            target: x86_64-unknown-linux-gnu
          - toolchain: beta
            target: x86_64-unknown-linux-gnu
          - toolchain: stable
            target: x86_64-unknown-linux-gnu
          - toolchain: 1.60.0
            target: x86_64-unknown-linux-gnu
          - toolchain: stable
            target: wasm32-wasi
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.rust }}-cargo-cache

      - name: Install Wasmtime
        if: matrix.target == 'wasm32-wasi'
        run: | 
          cd /tmp
          wget https://github.com/bytecodealliance/wasmtime/releases/download/${{ env.VERSION }}/wasmtime-${{ env.VERSION }}-${{ env.ARCH }}.tar.xz
          tar xf wasmtime-${{ env.VERSION }}-${{ env.ARCH }}.tar.xz
          mv wasmtime-${{ env.VERSION }}-${{ env.ARCH }}/wasmtime /usr/local/bin/wasmtime
        env:
          VERSION: v8.0.0
          ARCH: x86_64-linux

      - run: cargo test --all --no-fail-fast --target=${{ matrix.target }}

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - run: cargo clippy --tests

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check
